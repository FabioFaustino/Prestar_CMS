@using Prestar.Models

@inject SignInManager<User> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<ul class="nav nav-pills flex-column">
    <li class="nav-item"><a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index">Dados Pessoais</a></li>

    @if (User.IsInRole("Cliente") || User.IsInRole("Prestador"))
    {
        <li class="nav-item"><a class="nav-link @ManageNavPages.ChangeTypeOfAccountClass(ViewContext)" id="change-password" style="width:210px" asp-page="./ChangeTypeAccount">Alterar Tipo de Conta</a></li>
    }

    <li class="nav-item"><a class="nav-link @ManageNavPages.EmailNavClass(ViewContext)" id="email" asp-page="./Email">Email</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">Palavra-passe</a></li>

    @if (hasExternalLogins)
    {
        <li id="external-logins" class="nav-item"><a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">Login Externo </a></li>
    }

    <li class="nav-item"><a class="nav-link @ManageNavPages.SettingsClass(ViewContext)" id="config" asp-page="./Settings">Configurações</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.PersonalDataNavClass(ViewContext)" id="personal-data" asp-page="./PersonalData">Encerrar Conta</a></li>
</ul>
